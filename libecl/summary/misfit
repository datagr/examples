#!/usr/bin/env python
import sys
import json
import datetime
import pandas as pd
import numpy as np
from ecl.summary import EclSum

date_format = "%Y-%m-%d"

# This example will load a small json file with summary observations and a list
# of summary cases from the commandline. It will then create a pandas dataframe
# with one column for each observation point. The observations should be in a
# json file which should be formatted like this:
#
# {"WWCT:OP_1" : [["2010-10-01", 0.75, 0.10],
#                 ["2011-01-01", 0.80, 0.15],
#                 ["2012-01-01", 0.90, 0.20]],
#  "WGOR:OP_3" : [["2010-10-01", 125, 15],
#                 ["2012-07-01", 225, 35]]}


def load_obs(obs_file):
    obs_data = []
    with open(obs_file) as f:
        data = json.load( f )

        for key in data.keys():
            for line in data[key]:
                date = datetime.datetime.strptime(line[0], date_format)
                value = float(line[1])
                std = float(line[2])

                obs_data.append((key, date, value, std))

    return obs_data


def eval_misfit(summary_list, obs_data):
    frame = pd.DataFrame( [case.base for case in summary_list], columns = ["Case"])
    for key, date, obs_value, obs_std in obs_data:
        data = []
        for summary in summary_list:
            sim_value = summary.get_interp(key, date=date)
            chi1 = (sim_value - obs_value) / obs_std
            data.append(chi1 * chi1)
        column_header = "{}/{}".format(key, date.strftime(date_format))
        frame[column_header] = data

    return frame



if __name__ == "__main__":
    obs = load_obs(sys.argv[1])
    summary_list = [ EclSum(arg) for arg in sys.argv[2:] ]
    frame = eval_misfit(summary_list, obs)
    print frame
